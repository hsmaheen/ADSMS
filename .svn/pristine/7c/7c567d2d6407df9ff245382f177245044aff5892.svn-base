using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using ADSMS.BizLogic;
using System.Web.Services;
using ADSMS.DataAccess;

namespace ADSMS.Presentation
{
    public partial class ChartGenerationForm : System.Web.UI.Page
    {
        ClerkService_Phyo service = new ClerkService_Phyo();
        List<item> listI = new List<item>();
        List<category> listC = new List<category>();
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                listC = service.getAllCategory();
                categorylist.DataValueField = "CategoryID";
                categorylist.DataTextField = "CategoryName";
                categorylist.DataSource = listC;
                categorylist.DataBind();
 
            }


        }

        protected void categorylist_SelectedIndexChanged(object sender, EventArgs e)
        {
            
            int cid =  int.Parse(categorylist.SelectedValue);
            listI= service.getAllItemByCid(cid);
            itemlist.DataValueField = "ItemID";
            itemlist.DataTextField = "ItemDescription";
            itemlist.DataSource = listI;
            itemlist.DataBind();
            
            
        }

        [WebMethod]
        public static List<Object> getChart(int itemName, int catName, int depName)
        {

            stationeryEntities se = new stationeryEntities();
            int itemID = itemName;
            int catID = catName;
            int depID = depName;

            DateTime fromdate=new DateTime();
         

            List<Object> chart = new List<object>();
            DateTime todate=new DateTime();
            fromdate = DateTime.Today.AddDays(-90);
            todate = DateTime.Today;

            //get Chart by Category
            if ((itemID == 0) && (catID != 0) && (depID == 0))
            {
                chart = se.getChartbyCategoryandItem(fromdate, todate, catID).ToList<Object>();
                

            }

                //get chart by particular item
            else if ((itemID == 0) && ((catID != 0) || (catID == 0)) && (depID != 0))
            {
                chart = se.getChartForDepByCategoryOnly(fromdate, todate, depID).ToList<object>();

            }
            return chart;
            


            //chart = se.getChartbyCategory(fromdate, todate).ToList<Object>();
            //return chart;
            
 
        }
        [WebMethod]
        public static List<Object> getCustomChart(List<string> date)
        {
            List<Object> fchart=new List<object>();
            stationeryEntities se = new stationeryEntities();
            List<string> Datesn = new List<string>();
            Datesn = date;
            foreach (string d in Datesn)
            {
                DateTime fromDate = new DateTime();
                DateTime toDate = new DateTime();
                List<Object> chart = new List<object>();
                fromDate = Convert.ToDateTime(d);
                toDate = fromDate.AddDays(30);
                chart = se.getDepOrderByMonth(fromDate, toDate).ToList<Object>();
                fchart.Add(chart);
                
            }
            return fchart;
            }
    }
}